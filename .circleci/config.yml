version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.12
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: client-cache-{{ checksum "./client_app/package.json" }}
      - restore_cache:
          key: db-cache-{{ checksum "./db_app/package.json" }}
      - restore_cache:
          key: showdata-cache-{{ checksum "./show_data_app/package.json" }}
      - run:
          name: clear-npm-cache
          command: npm cache verify
      - run:
          name: install-npm-packages
          command: npm install
      - save_cache:
          key: client-cache-{{ checksum "./client_app/package.json" }}
          paths:
            - ./client_app/node_modules
      - save_cache:
          key: db-cache-{{ checksum "./db_app/package.json" }}
          paths:
            - ./db_app/node_modules
      - save_cache:
          key: showdata-cache-{{ checksum "./show_data_app/package.json" }}
          paths:
            - ./show_data_app/node_modules
  docker-images:
    docker:
      - image: docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: client-app-docker-image
          command: |
            TAG=latest
            IMAGE=kubernetes_client_app
            docker build --build-arg DB_APP_IP=${DB_APP_IP} --build-arg SHOW_DATA_APP_IP=${SHOW_DATA_APP_IP} -f Dockerfile_client_app -t $IMAGE:$TAG .
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker tag $IMAGE:$TAG $DOCKER_REGISTRY_USER/$IMAGE:$TAG
            docker push $DOCKER_REGISTRY_USER/$IMAGE:$TAG
      - run:
          name: db-app-docker-image
          command: |
            TAG=latest
            IMAGE=kubernetes_db_app
            docker build --build-arg DB_HOST=${DB_HOST} --build-arg DB_USER=${DB_USER} --build-arg DB_PASSWORD=${DB_PASSWORD} --build-arg DB_NAME=${DB_NAME} -f Dockerfile_db_app -t $IMAGE:$TAG .
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker tag $IMAGE:$TAG $DOCKER_REGISTRY_USER/$IMAGE:$TAG
            docker push $DOCKER_REGISTRY_USER/$IMAGE:$TAG
      - run:
          name: show-data-app-docker-image
          command: |
            TAG=latest
            IMAGE=kubernetes_show_data_app
            docker build --build-arg DB_APP_IP=${DB_APP_IP} -f Dockerfile_show_data_app -t $IMAGE:$TAG .
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
            docker tag $IMAGE:$TAG $DOCKER_REGISTRY_USER/$IMAGE:$TAG
            docker push $DOCKER_REGISTRY_USER/$IMAGE:$TAG
  kubernetes-deployment:
    docker:
      - image: rasenshurikenbum/kubectl
    steps:
      - checkout
      - run:
          name: apply-deployment
          command: |
            kubectl apply -f ./kubernetes_deployments.yml
workflows:
  version: 2
  main_workflow:
    jobs:
      - build
      - docker-images
      - kubernetes-deployment